import logging
import asyncio #–¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
import requests # –¥–ª—è —Å –≤–µ–±–æ–º –∏ –∞–ø–∏\
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.storage.memory import MemoryStorage
import os
from weather import get_coord
from datetime import datetime

logging.basicConfig(level=logging.INFO) # –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

bot = Bot(token="7728168775:AAErgIvs2OHRm8WTtnF3oAXnohqkBLlCUgE") # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –±–æ—Ç–∞ —á—Ç–æ –±—ã –ø–æ—Ç–æ–º —Å –Ω–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å

storage = MemoryStorage() # –∞–∫—Ç–∏–≤–∞—Ü–∏—è –ø–∞–º—è—Ç–∏ –±–æ—Ç–∞
dp = Dispatcher(storage=storage) # –∞–∫—Ç–∏–≤–∞—Ü–∏—è –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞

YANDEX_API_KEY = "57cb7358-081e-4a18-abed-158f09c21db1"


class Form(StatesGroup):
    adres = State()#–ê–∫—Ç–∏–≤/–ù–µ –∞–∫—Ç–∏–≤



@dp.message(Command("start")) # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
async def send_welcome(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∞–¥—Ä–µ—Å –ª—é–±–æ–π —Ç–æ—á–∫–∏ –º–∏—Ä–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏—Å–∫–æ–º –∞ —è –ø–æ–∫–∞–∂—É —Ç–µ–±–µ –ø–æ–≥–æ–¥—É —Ç–∞–º.")


@dp.message(Command("help")) # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
async def send_help(message: types.Message):
    help_text = """
<b>üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ü–æ–≥–æ–¥–Ω–æ–≥–æ –±–æ—Ç–∞</b>

–ë–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –∏ –ø—Ä–æ–≥–Ω–æ–∑ –≤ –ª—é–±–æ–π —Ç–æ—á–∫–µ –º–∏—Ä–∞.

<b>ü§ñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
/weather - –£–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –ø–æ –∞–¥—Ä–µ—Å—É
/forecast - –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 5 –¥–Ω–µ–π

<b>üìù –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>
1Ô∏è‚É£ <b>–ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å</b> - –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∞–¥—Ä–µ—Å –∏–ª–∏ –ª—é–±—É—é —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ú–æ—Å–∫–≤–∞", "–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å", "–≠–π—Ñ–µ–ª–µ–≤–∞ –±–∞—à–Ω—è")

2Ô∏è‚É£ <b>–ö–æ–º–∞–Ω–¥–∞ /weather</b> - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –∑–∞—Ç–µ–º —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å, –∏ –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ

3Ô∏è‚É£ <b>–ö–æ–º–∞–Ω–¥–∞ /forecast</b> - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, –∑–∞—Ç–µ–º —É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å, –∏ –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤–∞–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏

<b>üå¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –≤–∫–ª—é—á–∞–µ—Ç:</b>
‚Ä¢ –¢–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∏ –æ—â—É—â–∞–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã (—è—Å–Ω–æ, –æ–±–ª–∞—á–Ω–æ, –¥–æ–∂–¥—å –∏ —Ç.–¥.)
‚Ä¢ –°–∫–æ—Ä–æ—Å—Ç—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞
‚Ä¢ –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ
‚Ä¢ –í–ª–∞–∂–Ω–æ—Å—Ç—å –≤–æ–∑–¥—É—Ö–∞
‚Ä¢ –£–§-–∏–Ω–¥–µ–∫—Å (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
‚Ä¢ –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è (–¥–Ω–µ–º –∏ –≤–µ—á–µ—Ä–æ–º)

<b>üîç –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:</b>
‚Ä¢ –ú–æ—Å–∫–≤–∞
‚Ä¢ –ù—å—é-–ô–æ—Ä–∫
‚Ä¢ –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å
‚Ä¢ –ø—Ä–æ—Å–ø–µ–∫—Ç –õ–µ–Ω–∏–Ω–∞, 1, –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
‚Ä¢ —É–ª–∏—Ü–∞ –ü—É—à–∫–∏–Ω–∞, –¥–æ–º –ö–æ–ª–æ—Ç—É—à–∫–∏–Ω–∞

<b>‚ÑπÔ∏è –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ:</b> –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç API –Ø–Ω–¥–µ–∫—Å.–ü–æ–≥–æ–¥—ã –∏ –º–æ–∂–µ—Ç –Ω–µ –Ω–∞–π—Ç–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞–¥—Ä–µ—Å–∞. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —É–∫–∞–∑–∞—Ç—å –±–æ–ª–µ–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ –º–µ—Å—Ç–æ –∏–ª–∏ –±–ª–∏–∂–∞–π—à–∏–π –∫—Ä—É–ø–Ω—ã–π –æ–±—ä–µ–∫—Ç.
"""
    await message.reply(help_text, parse_mode="HTML")



@dp.message(Form.adres) # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —á—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É –∏ –∞–∫—Ç–∏–≤–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥—Ä–µ—Å
async def process_city(message: types.Message, state: FSMContext): # —Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await state.update_data(city=message.text) # –∑–∞–Ω–æ—Å–∏–º –≤ –ø–∞–º—è—Ç—å –∞–¥—Ä–µ—Å
    await get_weather(message)
    await state.clear() # –¥–µ–ª–∞–µ–º –∞–¥—Ä–µ—Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º


async def get_yandex_weather(adres):
    try: # –æ–±—Ä–æ–±–æ—Ç—á–∏–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
        location = get_coord(adres) # –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã

        if not location:
            return None

        lat = location["lat"] # —à–∏—Ä–æ—Ç–∞
        lon = location["lon"] #–¥–æ–ª–≥–æ—Ç–∞

        url = f'https://api.weather.yandex.ru/v2/forecast?lat={lat}&lon={lon}'
        headers = {
            'X-Yandex-Weather-Key': YANDEX_API_KEY
        }

        response = requests.get(url, headers=headers)

        if response.status_code == 200:
            return response.json()
        else:
            return None

    except Exception as e:
        return None


def get_wind_direction_text(wind_dir):
    directions = {
        "nw": "—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π",
        "n": "—Å–µ–≤–µ—Ä–Ω—ã–π",
        "ne": "—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π",
        "e": "–≤–æ—Å—Ç–æ—á–Ω—ã–π",
        "se": "—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π",
        "s": "—é–∂–Ω—ã–π",
        "sw": "—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π",
        "w": "–∑–∞–ø–∞–¥–Ω—ã–π",
        "c": "—à—Ç–∏–ª—å"
    }
    return directions.get(wind_dir, wind_dir)


def translate_condition(condition):
    conditions = {
        "clear": "—è—Å–Ω–æ",
        "partly-cloudy": "–º–∞–ª–æ–æ–±–ª–∞—á–Ω–æ",
        "cloudy": "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏",
        "overcast": "–ø–∞—Å–º—É—Ä–Ω–æ",
        "drizzle": "–º–æ—Ä–æ—Å—å",
        "rain": "–¥–æ–∂–¥—å",
        "heavy-rain": "—Å–∏–ª—å–Ω—ã–π –¥–æ–∂–¥—å",
        "showers": "–ª–∏–≤–µ–Ω—å",
        "wet-snow": "–¥–æ–∂–¥—å —Å–æ —Å–Ω–µ–≥–æ–º",
        "light-snow": "–Ω–µ–±–æ–ª—å—à–æ–π —Å–Ω–µ–≥",
        "snow": "—Å–Ω–µ–≥",
        "snow-showers": "—Å–Ω–µ–≥–æ–ø–∞–¥",
        "hail": "–≥—Ä–∞–¥",
        "thunderstorm": "–≥—Ä–æ–∑–∞",
        "thunderstorm-with-rain": "–¥–æ–∂–¥—å —Å –≥—Ä–æ–∑–æ–π",
        "thunderstorm-with-hail": "–≥—Ä–æ–∑–∞ —Å –≥—Ä–∞–¥–æ–º"
    }
    return conditions.get(condition, condition)


@dp.message(F.text)
async def get_weather(message: types.Message):
    try:
        adres = message.text

        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
        weather_data = await get_yandex_weather(adres)

        if weather_data and 'fact' in weather_data:
            fact = weather_data['fact']
            print(fact)

            temp = fact['temp']
            feels_like = fact['feels_like']
            condition = translate_condition(fact['condition'])
            wind_speed = fact['wind_speed']
            wind_gust = fact['wind_gust']
            wind_dir = get_wind_direction_text(fact['wind_dir'])
            pressure = fact['pressure_mm']
            humidity = fact['humidity']

            # –î–∞–Ω–Ω—ã–µ –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
            location_name = adres
            if 'info' in weather_data and 'tzinfo' in weather_data['info']:
                timezone = weather_data['info']['tzinfo']['name']
            else:
                timezone = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å"

            # –î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è
            obs_time = datetime.fromtimestamp(fact['obs_time']).strftime('%d.%m.%Y %H:%M')

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
            response = (
                f"üå°Ô∏è <b>–ü–æ–≥–æ–¥–∞ –≤ {location_name}</b> ({timezone})\n"
                f"üìÜ –î–∞–Ω–Ω—ã–µ –æ—Ç: {obs_time}\n\n"
                f"üå§Ô∏è <b>{condition.capitalize()}</b>\n"
                f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
                f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
                f"üå¨Ô∏è –í–µ—Ç–µ—Ä: {wind_dir}, {wind_speed} –º/—Å (–ø–æ—Ä—ã–≤—ã –¥–æ {wind_gust} –º/—Å)\n"
                f"üß≠ –î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º —Ä—Ç.—Å—Ç.\n"
            )

            # –î–æ–±–∞–≤–ª—è–µ–º –£–§-–∏–Ω–¥–µ–∫—Å –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
            if 'uv_index' in fact:
                response += f"‚òÄÔ∏è –£–§-–∏–Ω–¥–µ–∫—Å: {fact['uv_index']}\n"


            await message.answer(response, parse_mode="HTML")
        else:
            await message.reply(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –∞–¥—Ä–µ—Å–∞ {adres}.")
    except Exception as e:
        logging.error(f"Error: {e}")
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ: {e}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –≤ –º–µ–Ω—é Telegram
async def set_commands():
    commands = [
        types.BotCommand(command="start", description="–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º"),
        types.BotCommand(command="help", description="–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞")
    ]
    await bot.set_my_commands(commands)




async def main():
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –≤ –º–µ–Ω—é Telegram
    await set_commands()
    if os.name == 'nt':
        asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
    await dp.start_polling(bot)


asyncio.run(main())
